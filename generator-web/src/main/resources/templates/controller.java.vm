package ${package.Controller};

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.*;
import lombok.AllArgsConstructor;
import cn.hutool.core.collection.CollectionUtil;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.bm.center.base.util.ResUtil;
import com.bm.center.base.util.CopyUtil;
import com.bm.center.base.response.ResponseEntity;
import com.bm001.util.PageUtils;
import com.bm001.util.WrapperUtil;

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import $!{package.Service}.$!{table.serviceName};
import ${package.Entity}.${entity};
import javax.validation.Valid;
import ${package.Other}form.$!{caseModuleName}Form;
import ${package.Other}vo.$!{caseModuleName}Vo;
import lombok.SneakyThrows;
import java.util.List;
/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@AllArgsConstructor
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
@Api(value = "$!{table.comment}", tags = "$!{table.comment}接口")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end
#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    private final $!{table.serviceName} $!{caseModuleName}Service;

    /**
     * 分页列表
     *
     * @param $!{moduleName}form 　搜索关键词
     * @return Result
     */
    @SneakyThrows
    @PostMapping("/page")
    @ApiOperation(value = "$!{table.comment}列表", notes = "分页查询")
    public ResponseEntity<IPage<$!{caseModuleName}Vo>> page(@RequestBody $!{caseModuleName}Form $!{moduleName}form) {
		QueryWrapper<${entity}> queryWrapper = WrapperUtil.entityToWrapper(testform, ${entity}.class);
		//封装分页参数
		Page<${entity}> pageForm = PageUtils.getPage($!{moduleName}form);
		IPage<${entity}> page = $!{caseModuleName}Service.listPage(pageForm, queryWrapper);
		List<${entity}> list =page.getRecords();
		if (CollectionUtil.isEmpty(list)) {
		    return ResUtil.getSuccessResult(page);
		}
		List<$!{caseModuleName}Vo> $!{moduleName}VoList = CopyUtil.transfer(list,$!{caseModuleName}Vo.class);
		IPage<$!{caseModuleName}Vo> pageVo	=CopyUtil.transfer(page,Page.class);
		pageVo.setRecords($!{moduleName}VoList);
		return ResUtil.getSuccessResult(pageVo);
    }
}

#end